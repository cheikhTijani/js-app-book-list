{"mappings":"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","sources":["src/script.js"],"sourcesContent":["'use strict';\r\n\r\n// Get DOM General elements\r\nconst addBookForm = document.querySelector('.add-book');\r\nconst updateBookForm = document.querySelector('.update-book');\r\nconst cancelUpdateBtn = document.querySelector('.cancel-update');\r\nconst formAlert = document.querySelector('.alert');\r\nconst bookList = document.querySelector('.book-list');\r\nconst confirmDelBtn = document.getElementsByClassName('confirmDelBtn')[0];\r\nconst booksLeftEl = document.querySelector('.books-left');\r\nlet booksCount = document.getElementsByClassName('book-row');\r\n\r\n\r\n// Book constructor\r\nclass Book {\r\n    constructor(title, author, genres, count) {\r\n        this.title = title;\r\n        this.author = author;\r\n        this.genres = genres;\r\n        this.count = count;\r\n    }\r\n}\r\n\r\n// BookUI constructor\r\nclass BookUI {\r\n    // methods\r\n\r\n    // render book to DOM\r\n    addBookToList(book) {\r\n        // create tr\r\n        const row = document.createElement('tr');\r\n        row.classList = 'book-row';\r\n        row.id = `book-row-${book.count}`;\r\n        // insert cols\r\n        row.innerHTML = `\r\n            <td>${book.title}</td>\r\n            <td>${book.author}</td>\r\n            <td>${book.genres}</td>\r\n            <td class=\"countdown-${book.count}\"></td>\r\n            <td>\r\n                <a class=\"d-none text-decoration-none text-dark fw-bold\" href=\"#\" title=\"update\">\r\n                    <img src=\"./assets/icons/pencil-square.svg\" class=\"updateBook\" alt=\"update icon\">\r\n                </a>\r\n                &nbsp;\r\n                <a class=\"d-none text-decoration-none text-dark fw-bold\" data-bs-toggle=\"modal\" data-bs-target=\"#confirmDelete\" href=\"#\" title=\"delete\">\r\n                    <img src=\"./assets/icons/trash.svg\" class=\"deleteBook\" alt=\"Delete icon\">\r\n                </a>\r\n            </td>\r\n            `;\r\n        bookList.appendChild(row);\r\n\r\n        // timer\r\n        this.bookTimer(5, 1000);\r\n\r\n        // update books count\r\n        this.UpdateBookCount();\r\n\r\n        // hide form\r\n        addBookForm.classList.add('d-none');\r\n\r\n        return this;\r\n    }\r\n\r\n    // show messages UI\r\n    showMsg(status, msg = '') {\r\n        if (status === 'error') {\r\n            formAlert.textContent = msg;\r\n            formAlert.classList.add('alert-danger');\r\n            formAlert.classList.remove('d-none');\r\n        }\r\n        if (status === 'clear') {\r\n            formAlert.textContent = msg;\r\n            formAlert.classList.remove('alert-danger', 'alert-success');\r\n            formAlert.classList.add('d-none');\r\n        }\r\n        if (status === 'success') {\r\n            formAlert.textContent = msg;\r\n            formAlert.classList.add('alert-success');\r\n            formAlert.classList.remove('d-none');\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    // remove book from UI\r\n    removeBook(target) {\r\n        if (target.classList.contains('deleteBook')) {\r\n            // listen to confirm delete\r\n            confirmDelBtn.addEventListener('click', () => {\r\n                target.closest('tr').remove();\r\n                // remove from LS\r\n                Store.removeBook(target.closest('tr').id.split('-')[2]);\r\n                // show confirmation msg\r\n                this.showMsg('success', 'Book successfully deleted');\r\n                setTimeout(() => this.showMsg('clear'), 2000);\r\n                this.UpdateBookCount();\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    // book count update\r\n    UpdateBookCount() {\r\n        booksCount = document.getElementsByClassName('book-row');\r\n        const booksLeft = 36 - booksCount.length;\r\n        booksLeftEl.textContent = `${booksLeft} ${booksLeft !== 1 ? 'books' : 'book'} left`;\r\n        return this;\r\n    }\r\n\r\n    // get deatils\r\n    getDetails(bookRow, id) {\r\n        // get row text content\r\n        const title = bookRow.children[0].textContent;\r\n        const author = bookRow.children[1].textContent;\r\n        const genres = bookRow.children[2].textContent;\r\n        // put them in the update form\r\n        document.getElementById('titleUp').value = title;\r\n        document.getElementById('authorUp').value = author;\r\n        document.getElementById('genresUp').value = genres;\r\n        document.getElementById('book-hidden-id').value = id;\r\n        return this;\r\n    }\r\n\r\n    bookTimer(daysLeft, delay) {\r\n        booksCount = document.getElementsByClassName('book-row');\r\n        const daysLeftEl = booksCount[booksCount.length - 1].children[3];\r\n        // let daysLeft = 5;\r\n        // let delay = 86400000; // 1 day in milliseconds\r\n        // let delay = 1000;\r\n        countDown();\r\n        let timer = setInterval(countDown, delay);\r\n\r\n        function countDown() {\r\n            if (daysLeft > 0) {\r\n                daysLeftEl.textContent = `${daysLeft} ${daysLeft !== 1 ? 'days' : 'day'} left`;\r\n                --daysLeft;\r\n            } else {\r\n                clearInterval(timer);\r\n                timer = null;\r\n                daysLeftEl.innerHTML = `\r\n                    <a class=\"text-decoration-none text-dark fw-bold\" href=\"#\" title=\"Done\">\r\n                        <img src=\"./assets/icons/check-circle.svg\" class=\"bookDone\" alt=\"done icon\">\r\n                    </a>\r\n                    &nbsp;\r\n                    <a class=\"text-decoration-none text-dark fw-bold\" href=\"#\" title=\"More time\">\r\n                    <img src=\"./assets/icons/hourglass.svg\" class=\"wait\" alt=\"wait icon\">\r\n                    </a>`;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\n\r\n\r\n// LOCAL STORAGE\r\nclass Store {\r\n    static getBooks() {\r\n        let books;\r\n        if (!localStorage.getItem('books')) {\r\n            books = [];\r\n        } else {\r\n            books = JSON.parse(localStorage.getItem('books'))\r\n        }\r\n        return books;\r\n    }\r\n    static displayBooks() {\r\n        const books = Store.getBooks();\r\n\r\n        books.forEach((book) => {\r\n            // create tr\r\n            const row = document.createElement('tr');\r\n            row.classList = 'book-row';\r\n            row.id = `book-row-${book.count}`;\r\n            // insert cols\r\n            row.innerHTML = `\r\n                <td>${book.title}</td>\r\n                <td>${book.author}</td>\r\n                <td>${book.genres}</td>\r\n                <td class=\"countdown-${book.count}\">Done</td>\r\n                <td>\r\n                    <a class=\"text-decoration-none text-dark fw-bold\" href=\"#\" title=\"update\">\r\n                        <img src=\"./assets/icons/pencil-square.svg\" class=\"updateBook\" alt=\"update icon\">\r\n                    </a>\r\n                    &nbsp;\r\n                    <a class=\"text-decoration-none text-dark fw-bold\" data-bs-toggle=\"modal\" data-bs-target=\"#confirmDelete\" href=\"#\" title=\"delete\">\r\n                        <img src=\"./assets/icons/trash.svg\" class=\"deleteBook\" alt=\"Delete icon\">\r\n                    </a>\r\n                </td>\r\n                `;\r\n            bookList.appendChild(row);\r\n        });\r\n    }\r\n    static addBook(newBook) {\r\n        const books = Store.getBooks();\r\n        books.push(newBook);\r\n        localStorage.setItem('books', JSON.stringify(books));\r\n    }\r\n    static removeBook(count) {\r\n        const books = Store.getBooks();\r\n        books.forEach((book, index) => {\r\n            if (book.count === +count) {\r\n                books.splice(index, 1);\r\n            }\r\n        });\r\n        localStorage.setItem('books', JSON.stringify(books));\r\n    }\r\n\r\n    static updatebook(title, author, genres, count) {\r\n        const books = Store.getBooks();\r\n        books.forEach(book => {\r\n            if (book.count === +count) {\r\n                book.title = title;\r\n                book.author = author;\r\n                book.genres = genres;\r\n            }\r\n        });\r\n        localStorage.setItem('books', JSON.stringify(books));\r\n    }\r\n\r\n    // initial book count\r\n    static initBookCount() {\r\n        const booksLeft = 36 - booksCount.length;\r\n        if (booksLeft < 36) booksLeftEl.textContent = `${booksLeft} ${booksLeft !== 1 ? 'books' : 'book'} left`;\r\n        if (booksLeft <= 0) {\r\n            booksLeftEl.textContent === 'Congratulations, You did it';\r\n            addBookForm.classList.add('d-none');\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// EVENT LISTENERS\r\n\r\n// DOM load event\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    Store.initBookCount();\r\n    Store.displayBooks();\r\n\r\n});\r\n\r\n// Add book event listener\r\naddBookForm.addEventListener('submit', function (e) {\r\n\r\n    e.preventDefault();\r\n\r\n    // form values\r\n    const title = document.getElementById('title').value.trim();\r\n    const author = document.getElementById('author').value.trim();\r\n    const genres = document.getElementById('genres').value.trim();\r\n\r\n    // add ui instance\r\n    const UI = new BookUI();\r\n\r\n    // check if empty values\r\n    if (title === '' || author === '' || genres === '') {\r\n        UI.showMsg('error', 'Please fill in all the fields');\r\n        setTimeout(() => UI.showMsg('clear'), 2000);\r\n        return;\r\n    }\r\n\r\n    // clear msg errors\r\n    UI.showMsg('clear');\r\n\r\n    // count\r\n    let count;\r\n    booksCount = document.getElementsByClassName('book-row');\r\n\r\n    // check if book already exists\r\n    const bookRows = Array.from(booksCount);\r\n    const result = bookRows.find(row => row.children[0].textContent.toLocaleLowerCase() === title.toLocaleLowerCase() && row.children[1].textContent.toLocaleLowerCase() === author.toLocaleLowerCase());\r\n\r\n    if (result) {\r\n        UI.showMsg('error', 'You already added this book');\r\n        setTimeout(() => UI.showMsg('clear'), 2000);\r\n        return;\r\n    }\r\n\r\n    if (booksCount.length === 0) {\r\n        count = 1;\r\n    } else {\r\n        const lastBook = booksCount[booksCount.length - 1];\r\n        if (lastBook.children[3].textContent !== 'Done') {\r\n            UI.showMsg('error', 'You need to finish current book');\r\n            setTimeout(() => UI.showMsg('clear'), 3000);\r\n            return;\r\n        }\r\n        const lastId = +lastBook.id.split('-')[2];\r\n        count = lastId + 1;\r\n    }\r\n\r\n    // Add book instance\r\n    const book = new Book(title, author, genres, count);\r\n\r\n    // add book to list using UI class\r\n    UI.addBookToList(book);\r\n\r\n    // show succes msg\r\n    UI.showMsg('success', 'Book added successfully');\r\n    setTimeout(() => UI.showMsg('clear'), 2000);\r\n\r\n    // clear fields\r\n    addBookForm.reset();\r\n\r\n});\r\n\r\n// Update book event listener\r\nupdateBookForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    const title = document.getElementById('titleUp').value.trim();\r\n    const author = document.getElementById('authorUp').value.trim();\r\n    const genres = document.getElementById('genresUp').value.trim();\r\n    const rowId = document.getElementById('book-hidden-id').value.trim();\r\n\r\n    // add ui instance\r\n    const UI = new BookUI();\r\n\r\n    // check if empty values\r\n    if (title === '' || author === '' || genres === '') {\r\n        UI.showMsg('error', 'Please fill in all the fields');\r\n        setTimeout(() => UI.showMsg('clear'), 2000);\r\n        return;\r\n    }\r\n\r\n    // clear msg errors\r\n    UI.showMsg('clear');\r\n\r\n    // find the row\r\n    booksCount = document.getElementsByClassName('book-row');\r\n    const bookRows = Array.from(booksCount);\r\n    const row = bookRows.find(row => row.id === rowId);\r\n\r\n    // update it\r\n    row.children[0].textContent = title;\r\n    row.children[1].textContent = author;\r\n    row.children[2].textContent = genres;\r\n\r\n    // update in LS\r\n    Store.updatebook(title, author, genres, row.id.split('-')[2]);\r\n\r\n    // show update msg \r\n    UI.showMsg('success', 'Updated successfully');\r\n    setTimeout(() => UI.showMsg('clear'), 2000);\r\n    // reset form\r\n    updateBookForm.reset();\r\n    // hide it\r\n    updateBookForm.classList.add('d-none');\r\n    addBookForm.classList.remove('d-none');\r\n\r\n});\r\n\r\n// cancel update event listener\r\ncancelUpdateBtn.addEventListener('click', function (e) {\r\n    e.preventDefault();\r\n    updateBookForm.reset();\r\n    updateBookForm.classList.add('d-none');\r\n    addBookForm.classList.remove('d-none');\r\n});\r\n\r\n\r\n\r\n\r\n// event listener for DELETE Update BOOK\r\nbookList.addEventListener('click', (e) => {\r\n    // delete book\r\n    if (e.target.classList.contains('deleteBook')) {\r\n        // add ui instance\r\n        const UI = new BookUI();\r\n        // call delete\r\n        UI.removeBook(e.target);\r\n    }\r\n    // update book\r\n    if (e.target.classList.contains('updateBook')) {\r\n        // show update form\r\n        addBookForm.classList.add('d-none');\r\n        updateBookForm.classList.remove('d-none');\r\n        // get details\r\n        const bookRow = e.target.closest('.book-row');\r\n        const id = bookRow.id;\r\n        const UI = new BookUI();\r\n        UI.getDetails(bookRow, id);\r\n    }\r\n    if (e.target.classList.contains('bookDone')) {\r\n        const bookRow = e.target.closest('.book-row');\r\n        bookRow.children[3].innerHTML = 'Done';\r\n        // show update and delete buttons\r\n        const links = Array.from(bookRow.children[4].children);\r\n        links.forEach(link => link.classList.remove('d-none'));\r\n\r\n        const title = bookRow.children[0].textContent;\r\n        const author = bookRow.children[1].textContent;\r\n        const genres = bookRow.children[2].textContent;\r\n        const count = +bookRow.id.split('-')[2];\r\n        const book = new Book(title, author, genres, count);\r\n        // Add to LS\r\n        Store.addBook(book);\r\n        // show back form\r\n        addBookForm.classList.remove('d-none');\r\n    }\r\n    if (e.target.classList.contains('wait')) {\r\n        // add ui instance\r\n        const UI = new BookUI();\r\n        UI.bookTimer(2, 1000);\r\n\r\n    }\r\n});\r\n"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}